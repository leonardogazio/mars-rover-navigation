---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: grpc-server
  name: mars-rover-navigation
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: grpc-server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: grpc-server
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "internal-app"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject-secret-config: "mars-rover-navigation/env"
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "mars-rover-navigation/env" -}}
            {{ range $key, $value := .Data.data }}
              export {{ $key }}="{{ $value }}"
            {{ end }}
          {{- end }}        
    spec:
      serviceAccountName: mars-rover-navigation
      containers:
        - image: mars-rover-navigation
          imagePullPolicy: Always
          command: ["bash", "-c", "source internal/database/config && app -api=true"]
          name: mars-rover-navigation
          ports:
            - containerPort: 50000
              name: grpc
              protocol: TCP
          resources: {}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: grpc
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: grpc
      imagePullSecrets:
        - name: docker-mars-rover-navigation

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: grpc-server
  name: mars-rover-navigation
spec:
  ports:
    - port: 80
      targetPort: 50000
      name: grpc
      protocol: TCP
  type: LoadBalancer
  selector:
    app.kubernetes.io/component: grpc-server